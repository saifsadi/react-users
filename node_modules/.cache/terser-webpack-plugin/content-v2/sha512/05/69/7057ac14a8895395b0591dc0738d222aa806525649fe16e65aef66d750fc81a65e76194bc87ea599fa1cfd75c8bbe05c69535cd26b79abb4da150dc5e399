{"map":"{\"version\":3,\"sources\":[\"/Users/saifurrehman/Documents/Web-Development/portfolio/src/serviceWorker.js\",\"/Users/saifurrehman/Documents/Web-Development/portfolio/src/components/Card.js\",\"/Users/saifurrehman/Documents/Web-Development/portfolio/src/components/CardList.js\",\"/Users/saifurrehman/Documents/Web-Development/portfolio/src/components/SearchBox.js\",\"/Users/saifurrehman/Documents/Web-Development/portfolio/src/containers/robots.js\",\"/Users/saifurrehman/Documents/Web-Development/portfolio/src/components/Scroll.js\",\"/Users/saifurrehman/Documents/Web-Development/portfolio/src/containers/App.js\",\"/Users/saifurrehman/Documents/Web-Development/portfolio/src/index.js\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"Card\",\"props\",\"name\",\"username\",\"email\",\"image\",\"react_default\",\"a\",\"createElement\",\"className\",\"id\",\"src\",\"alt\",\"CardList\",\"_ref\",\"robots\",\"map\",\"users\",\"i\",\"src_components_Card\",\"key\",\"SearchBox\",\"search\",\"onSearchChange\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"style\",\"overflow\",\"border\",\"height\",\"children\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"event\",\"setState\",\"target\",\"value\",\"state\",\"_this$state\",\"filterRobots\",\"filter\",\"robot\",\"toLocaleLowerCase\",\"includes\",\"components_SearchBox\",\"components_Scroll\",\"components_CardList\",\"Component\",\"ReactDOM\",\"render\",\"containers_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport './Card.css';\\n\\nconst Card = (props) => {\\n    const { name, username, email, image } = props;\\n    return (\\n       <div className=\\\"tc bg-light-green dib br3 pa2 ma2 grow bw2 shadow-5\\\" id={username}>\\n           <img src={image} alt=\\\"robots\\\" />\\n            <div>\\n                <h2>{name}</h2>\\n                <p>{email}</p>\\n            </div>\\n       </div>\\n    );\\n}\\n\\nexport default Card;\",\"import React from 'react';\\nimport Card from './Card';\\n\\nconst CardList = ({robots}) => {\\n    return(\\n        robots.map((users,i)=>{\\n            return <Card \\n                key={robots[i].id} \\n                name={robots[i].name} \\n                username = {robots[i].username} \\n                email={robots[i].email} \\n                image = {robots[i].image}  />\\n        })\\n    );\\n    \\n\\n}\\n\\nexport default CardList;\",\"import React from 'react';\\nconst SearchBox = ({search, onSearchChange}) => {\\n    return <input type=\\\"search\\\" name=\\\"search\\\" placeholder=\\\"Search your fav Noob\\\" onChange={onSearchChange}/>\\n}\\n\\nexport default SearchBox;\",\"export const robots = [\\n    {\\n        id : 1,\\n        image : 'https://avatars1.githubusercontent.com/u/26534702?s=460&v=4',\\n        name : 'Saif Sadi',\\n        username : 'saifsadi',\\n        email : 'saif@xammin.com'\\n\\n    },\\n    {\\n        id : 2,\\n        image : 'https://robohash.org/khalil',\\n        name : 'Khalil Khan',\\n        username : 'khalil',\\n        email : 'khalil@xammin.com'\\n\\n    },\\n    {\\n        id : 3,\\n        image : 'https://robohash.org/rizwan',\\n        name : 'M Rizwan',\\n        username : 'rizwan',\\n        email : 'rizwan@xammin.com'\\n\\n    },\\n    {\\n        id : 4,\\n        image : 'https://robohash.org/hikmat',\\n        name : 'Hikmat Khan',\\n        username : 'hikmat',\\n        email : 'hikmat@xammin.com'\\n\\n    },\\n    {\\n        id : 5,\\n        image : 'https://robohash.org/sami',\\n        name : 'Sami Pami',\\n        username : 'sami',\\n        email : 'sami@xammin.com'\\n\\n    },\\n    {\\n        id : 6,\\n        image : 'https://robohash.org/kashif',\\n        name : 'Kashif Khan',\\n        username : 'kashif',\\n        email : 'kashif@xammin.com'\\n\\n    },\\n    {\\n        id : 7,\\n        image : 'https://robohash.org/ali',\\n        name : 'Ali Khan',\\n        username : 'ali',\\n        email : 'ali@xammin.com'\\n\\n    },\\n    {\\n        id : 8,\\n        image : 'https://robohash.org/basit',\\n        name : 'Abdul Basit',\\n        username : 'basit',\\n        email : 'basit@xammin.com'\\n\\n    },\\n    {\\n        id : 9,\\n        image : 'https://robohash.org/muneer',\\n        name : 'Muneer Ahmad',\\n        username : 'muneer',\\n        email : 'muneer@xammin.com'\\n\\n    },\\n    {\\n        id : 10,\\n        image : 'https://robohash.org/hassan',\\n        name : 'Hassan Noor',\\n        username : 'hassan',\\n        email : 'hassan@xammin.com'\\n\\n    },\\n    {\\n        id : 11,\\n        image : 'https://robohash.org/awais',\\n        name : 'Awais Koko',\\n        username : 'koko',\\n        email : 'koko@xammin.com'\\n\\n    }\\n]\",\"import React from 'react';\\nconst Scroll = (props) => {\\n    return (\\n        <div style={{overflow: 'scroll', border: '1px solid', height:'600px'}}>\\n            {props.children}\\n        </div>\\n    );\\n}\\n\\nexport default Scroll;\",\"import React, {Component} from 'react';\\nimport CardList from '../components/CardList';\\nimport SearchBox from '../components/SearchBox';\\nimport {robots} from './robots';\\nimport Scroll from '../components/Scroll';\\n\\nclass App extends Component {\\n    constructor() {\\n        super();    //for using 'this' method , must call super method\\n        this.state = {\\n            robots : robots,\\n            search : ''\\n        }\\n    }\\n\\n    onSearchChange = (event) => {\\n        this.setState({search : event.target.value});\\n       \\n        \\n    }\\n\\nrender() {\\n    const {robots, search} = this.state;\\n    const filterRobots = robots.filter(robot => {\\n        return robot.name.toLocaleLowerCase().includes(search.toLocaleLowerCase());\\n    })\\n    return (\\n        <div className=\\\"tc\\\">\\n            <h1 className=\\\"tc\\\">Find All Noobs</h1>\\n            <SearchBox onSearchChange={this.onSearchChange}/>\\n            <br />\\n            <Scroll>\\n            \\n            <CardList robots={filterRobots} />\\n\\n            </Scroll>\\n    \\n        </div>\\n    \\n    );\\n}\\n\\n}\\n\\nexport default App;\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport * as serviceWorker from './serviceWorker';\\nimport App from './containers/App';\\nimport 'tachyons';\\n//import { robots } from './robots';\\n\\nReactDOM.render(<App />,\\n    document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(a,e,n){},15:function(a,e,n){},17:function(a,e,n){\"use strict\";n.r(e);var t=n(0),i=n.n(t),r=n(2),m=n.n(r);n(14),Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var o=n(3),s=n(4),h=n(6),c=n(5),l=n(7),u=(n(15),function(a){var e=a.name,n=a.username,t=a.email,r=a.image;return i.a.createElement(\"div\",{className:\"tc bg-light-green dib br3 pa2 ma2 grow bw2 shadow-5\",id:n},i.a.createElement(\"img\",{src:r,alt:\"robots\"}),i.a.createElement(\"div\",null,i.a.createElement(\"h2\",null,e),i.a.createElement(\"p\",null,t)))}),g=function(a){var e=a.robots;return e.map(function(a,n){return i.a.createElement(u,{key:e[n].id,name:e[n].name,username:e[n].username,email:e[n].email,image:e[n].image})})},d=function(a){a.search;var e=a.onSearchChange;return i.a.createElement(\"input\",{type:\"search\",name:\"search\",placeholder:\"Search your fav Noob\",onChange:e})},b=[{id:1,image:\"https://avatars1.githubusercontent.com/u/26534702?s=460&v=4\",name:\"Saif Sadi\",username:\"saifsadi\",email:\"saif@xammin.com\"},{id:2,image:\"https://robohash.org/khalil\",name:\"Khalil Khan\",username:\"khalil\",email:\"khalil@xammin.com\"},{id:3,image:\"https://robohash.org/rizwan\",name:\"M Rizwan\",username:\"rizwan\",email:\"rizwan@xammin.com\"},{id:4,image:\"https://robohash.org/hikmat\",name:\"Hikmat Khan\",username:\"hikmat\",email:\"hikmat@xammin.com\"},{id:5,image:\"https://robohash.org/sami\",name:\"Sami Pami\",username:\"sami\",email:\"sami@xammin.com\"},{id:6,image:\"https://robohash.org/kashif\",name:\"Kashif Khan\",username:\"kashif\",email:\"kashif@xammin.com\"},{id:7,image:\"https://robohash.org/ali\",name:\"Ali Khan\",username:\"ali\",email:\"ali@xammin.com\"},{id:8,image:\"https://robohash.org/basit\",name:\"Abdul Basit\",username:\"basit\",email:\"basit@xammin.com\"},{id:9,image:\"https://robohash.org/muneer\",name:\"Muneer Ahmad\",username:\"muneer\",email:\"muneer@xammin.com\"},{id:10,image:\"https://robohash.org/hassan\",name:\"Hassan Noor\",username:\"hassan\",email:\"hassan@xammin.com\"},{id:11,image:\"https://robohash.org/awais\",name:\"Awais Koko\",username:\"koko\",email:\"koko@xammin.com\"}],p=function(a){return i.a.createElement(\"div\",{style:{overflow:\"scroll\",border:\"1px solid\",height:\"600px\"}},a.children)},f=function(a){function e(){var a;return Object(o.a)(this,e),(a=Object(h.a)(this,Object(c.a)(e).call(this))).onSearchChange=function(e){a.setState({search:e.target.value})},a.state={robots:b,search:\"\"},a}return Object(l.a)(e,a),Object(s.a)(e,[{key:\"render\",value:function(){var a=this.state,e=a.robots,n=a.search,t=e.filter(function(a){return a.name.toLocaleLowerCase().includes(n.toLocaleLowerCase())});return i.a.createElement(\"div\",{className:\"tc\"},i.a.createElement(\"h1\",{className:\"tc\"},\"Find All Noobs\"),i.a.createElement(d,{onSearchChange:this.onSearchChange}),i.a.createElement(\"br\",null),i.a.createElement(p,null,i.a.createElement(g,{robots:t})))}}]),e}(t.Component);n(16);m.a.render(i.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(a){a.unregister()})},8:function(a,e,n){a.exports=n(17)}},[[8,1,2]]]);","extractedComments":[]}